@using Microsoft.AspNetCore.Mvc.TagHelpers
@using PostIt.Web.Enums
@using PostIt.Web.Services
@model IEnumerable<Post>?

@inject IUserService _userService

@{
    ViewData["Title"] = "Home Page";
}

@if (!Context.User.Identity.IsAuthenticated)
{
    <p class="text-center">Please
    
        <a asp-controller="Authentication" asp-action="GoogleLogin">Log In with google</a> <br/>
        <a asp-controller="User" asp-action="Create">Create new account</a> <br/>
        <a asp-controller="User" asp-action="Login">Log In</a> <br/>
        
        in order to use this App
    </p>
    
    return;
}

@if (Model is null || !Model.Any())
{
    <h3 class="text-primary">Seems like you are not following anyone? Here is a list of users to follow:</h3>
    <em>pssst.. you need to start somewhere</em>
    
    var usr = _userService.GetByUsername(User.Identity.Name);
    
    var usrs = _userService.GetMostFollowedDesc(15, usr.Username);

    foreach (var u in usrs)
    {
        <div>
            <h6>
                <img alt="profile" src="@u.ImageUrl" width="20" height="20" class="rounded-circle"/>
                <a asp-action="Index" asp-controller="Profile" asp-route-username="@u.Username">@u.Username</a>
            </h6>

            <a>Followers: @u.Followers.Count</a>
                
            @{
                var a = usr!.Following.Contains(new Following { FollowingId = u.Id });


                if (a == false || usr.Following.Count == 0)
                {
                    <a asp-action="Follow" asp-route-id="@u.Id">Follow</a>
                }
                else 
                {
                    <a>Following</a>
                }
            }
            <hr />
        </div>
    }
    return;
}

@{
    var user = _userService.GetByUsername(User.Identity.Name);
    
    <div id="who_to_follow" class="w-25 h-auto">
        <h5>Who to follow?</h5>
        @{
            var users = _userService.GetMostFollowedDesc(5, user.Username);
        }

        @for (var i = 0; i < users.Count; i++)
        {
            <div>
                <h6>
                    <img alt="profile" src="@users[i].ImageUrl" width="20" height="20" class="rounded-circle"/>
                    <a asp-action="Index" asp-controller="Profile" asp-route-username="@users[i].Username">@users[i].Username</a>
                </h6>

                <a>Followers: @users[i].Followers.Count</a>
                
                @{
                    var a = user!.Following.Contains(new Following { FollowingId = users[i].Id });
                }

                @if (a == false || user.Following.Count == 0)
                {
                    <a asp-action="Follow" asp-route-id="@users[i].Id">Follow</a>
                }
                else 
                {
                    <a>Following</a>
                }
                  
                <hr />
            </div>
        }

    </div>
    
    <div class="text-center">
        <p>
            <a asp-action="Post" asp-controller="Home">Write a Post!</a>
        </p>
        
        <div class="main-posts">
            @foreach (var post in Model)
            {
                
                <div class="post">
                    @if (post.Likes.Count > 0)
                    {
                        var userWhoLiked = post.Likes[0];
                                        
                        <a asp-action="Index" class="action" asp-controller="Profile" asp-route-username="@userWhoLiked.Username" class="text-primary">
                            <img src="@userWhoLiked.ImageUrl" width="15" height="15" alt="profile picture" class="rounded-circle"/>
                            Liked by @userWhoLiked.Username
                        </a>
                    }
                
                    <a class="action" asp-action="Index" id="a" asp-controller="Post" asp-route-id="@post.Id">
                        <h4> @post.Title </h4>

                        <p> @post.Description </p>
                        <a>@post.TimeAdded |</a> 

                        <a asp-action="Index" asp-controller="Profile" asp-route-username="@post.Author.Username">
                            <img src="@post.Author.ImageUrl" width="30" height="30" alt="profile picture" class="rounded-circle"/>
                            @post.Author.Username
                        </a>
                
                        @if(!string.IsNullOrEmpty(post.MediaLink))
                        {
                            <img src="@post.MediaLink" alt="Image" style="width: 30vw; height: 20vh;" />
                        }

                        @if (post.Author.Username == Context.User.Identity.Name || user.Roles == ERoleType.Admin)
                        {
                            <a asp-action="Delete" class="action" asp-route-id="@post.Id">Delete</a>
                        }
                
                        <p>

                            @if(Context.User.Identity.IsAuthenticated) 
                            {
                                if (!post.Likes.Contains(user))
                                {
                                    <a asp-action="Like" class="action" asp-controller="Home" asp-route-id="@post.Id">🤍 @post.Likes.Count</a>
                                }
                                else if (post.Likes.Contains(user))
                                {
                                    <a asp-action="Unlike" class="action" asp-controller="Home" asp-route-id="@post.Id">&#10084; @post.Likes.Count</a>
                                }
                            }
                            
                            <a>&#128488; @post.Comments.Count</a> 
                        
                        </p>
                        
                    </a>
                </div>
              
            }
        </div>
        
    </div>
}

<style>

.post {
    background-color: rgb(237, 235, 235);
    width: 80%;
    height: 200px;
    border: 1px solid black;
    margin: 10px auto 0;
}

a#a {
    height: 100%;
    width: 100%;
    text-decoration: none;
}

.action {
    text-decoration: none;
    color: black;
}

</style>