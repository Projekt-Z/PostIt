@using PostIt.Web.Services.Posts
@using PostIt.Web.Services
@using PostIt.Web.Enums
@using PostIt.Web.Helpers
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model User
@inject IPostService _postService
@inject IUserService _userService

@{
    ViewBag.Title = $"- {Model.Username}";
    Layout = "_Layout";
}

@{
    var user = _userService.GetByUsername(User.Identity.Name);
}
<div id="bg" style="background-image: url(@Model.BackgroundUrl);" >
    <div style="width: 60px; height: 60px; background-color: gray;" class="rounded-circle">
        <img src="@Model.ImageUrl" alt="Profile Picture" width="60" height="60" class="rounded-circle"> 
        @if (Model.PostItVerified)
        {
            <span id="verified" class="position-absolute">✔</span>
        }
    </div>
</div>

@if (Model.Username == User.Identity.Name && User.Identity.IsAuthenticated)
{
    <a>Account desciption</a>
    <form asp-action="UpdateDescription" asp-controller="Account">
        <input asp-for="Description" type="text" value="@Model.Description" placeholder="Say something about you!"/>
        <input asp-for="Id" hidden value="@Model.Id"/>

        <input type="submit" value="Change"/>
    </form>
}

<b> <p>@Model.Name</p> </b>
<a>&#64;@Model.Username</a>
<em>@Model.Description</em>

<br/>
<p>Jonied @Model.CreatedOn</p>

@if (!User.Identity.IsAuthenticated) {return;}

@if (!Model.Equals(_userService.GetByUsername(User.Identity.Name)))
{
    @if (user!.Following.FirstOrDefault(x => x.FollowingId == Model.Id) is null|| user.Following.Count == 0)
    {
        <a asp-action="Follow" asp-controller="Home" asp-route-id="@Model.Id">Follow</a>
    }
    else 
    {
        <a>Following</a>
        <a asp-action="Unfollow" asp-controller="Home" asp-route-id="@Model.Id">Unfollow</a>
    }

    @if (user.BlockedUsers.FirstOrDefault(x => x.BlockedUserId == Model.Id) is null || user.BlockedUsers.Count == 0)
    {
        <a asp-action="Block" asp-controller="Profile" asp-route-username="@Model.Username"> Block </a>
    }
    else 
    {
        <a asp-action="Unblock" asp-controller="Profile" asp-route-username="@Model.Username"> Unblock </a>
    }
}


<div class="">
    <p>Posts : @Model.Posts.Count</p>
    <hr/>
    @foreach (var post in _postService.GetAllYours(Model.Username))
    {
        <div class="post">
            <a asp-action="Index" id="a" asp-controller="Post" asp-route-id="@post.Id">
                <h4> @post.Title </h4>

                <p> @post.Description </p>
                <a>@post.TimeAdded |</a> 
                <a asp-action="Index" asp-controller="Profile" asp-route-username="@post.Author.Username">@post.Author.Username</a>
                
                @if(!string.IsNullOrEmpty(post.MediaLink))
                {
                    <img src="@post.MediaLink" alt="Image" style="width: 30vw; height: 20vh;" />
                }

                @if (post.Author.Username == Context.User.Identity.Name || user.Roles == ERoleType.Admin)
                {
                    <a asp-action="Delete" asp-controller="Home" asp-route-id="@post.Id">Delete</a>
                }

                @if (!post.Likes.Contains(user))
                {
                    <a asp-action="Like" class="action" asp-controller="Home" asp-route-id="@post.Id">🤍 @post.Likes.Count</a>
                }
                else if (post.Likes.Contains(user))
                {
                    <a asp-action="Unlike" class="action" asp-controller="Home" asp-route-id="@post.Id">&#10084; @post.Likes.Count</a>
                }
            </a>
        </div>
    }
</div>

<hr class="text-black"/>

<div class="">
    <p>Liked Posts : @Model.PostLiked.Count</p>
    <hr/>
    @foreach (var post in _postService.GetAllLiked(Model.Username))
    {
        <div class="post">
            <a asp-action="Index" id="a" asp-controller="Post" asp-route-id="@post.Id">
                <h4> @post.Title </h4>

                <p> @post.Description </p>
                <a>@post.TimeAdded |</a> 
                <a asp-action="Index" asp-controller="Profile" asp-route-username="@post.Author.Username">@post.Author.Username</a>
                
                @if(!string.IsNullOrEmpty(post.MediaLink))
                {
                    <img src="@post.MediaLink" alt="Image" style="width: 30vw; height: 20vh;" />
                }

                @if (post.Author.Username == Context.User.Identity.Name || user.Roles == ERoleType.Admin)
                {
                    <a asp-action="Delete" asp-controller="Home" asp-route-id="@post.Id">Delete</a>
                }
                
                @if (!post.Likes.Contains(user))
                {
                    <a asp-action="Like" class="action" asp-controller="Home" asp-route-id="@post.Id">🤍 @post.Likes.Count</a>
                }
                else if (post.Likes.Contains(user))
                {
                    <a asp-action="Unlike" class="action" asp-controller="Home" asp-route-id="@post.Id">&#10084; @post.Likes.Count</a>
                }
            </a>
        </div>
    }
</div>

<div class="">
    <a asp-action="Followers" asp-route-username="@Model.Username">Followers : @Model.Followers.Count</a>
    <hr/>

</div>

<div class="">
    <a asp-action="Following" asp-route-username="@Model.Username">Following : @Model.Following.Count</a>
    <hr/>

</div>

<div>
    <a asp-controller="Authentication" asp-action="GoogleLogout">Log out</a>
</div>

<style>

.post {
    background-color: rgb(237, 235, 235);
    width: 80%;
    height: 200px;
    border: 1px solid black;
    margin: 10px auto 0;
}

a#a {
    height: 100%;
    width: 100%;
    text-decoration: none;
}

#verified {
    z-index: 0;
}

</style>